<html>
<head>
<script type=text/javascript src=js/func.js?v=001></script>
<script type=text/javascript src=js/canvasjs.min.js?v=007></script>
<script type=text/javascript src=module.js?v=002></script>
<script type=text/javascript>

function refreshall(){
  gfx0.render();gfx1.render();  gfx2.render();gfx3.render();gfx4.render();gfx5.render();
  }

function loadData(){
  var d = new Date();
  var sd = d.getUTCFullYear() + '-' + (d.getUTCMonth() + 1) + '-' + d.getUTCDate() + ' ' +  d.getUTCHours() + ':' + d.getUTCMinutes();
  var js = document.createElement('script');
  js.type='text/javascript';
  js.src="kpi2.js" + "?d=" + sd;
  var weektoshow = 20;
  document.head.appendChild(js);    
  js.onload = function(){ 
    for(var n=0; n<6; n++){
      gfx0.options.data[n].dataPoints=[];
      gfx1.options.data[n].dataPoints=[];
      gfx2.options.data[n].dataPoints=[];
      gfx3.options.data[n].dataPoints=[];
      gfx4.options.data[n].dataPoints=[];
      gfx5.options.data[n].dataPoints=[];
      }
    for(var n=0; n<npc_eng_mac.dates.length; n++){
      gfx0.options.data[0].dataPoints.push({label:npc_eng_mac.dates[n], y:npc_eng_mac.a[n]})
      gfx0.options.data[1].dataPoints.push({label:npc_eng_mac.dates[n], y:npc_eng_mac.b[n]})
      gfx0.options.data[2].dataPoints.push({label:npc_eng_mac.dates[n], y:npc_eng_mac.c[n]})
      gfx0.options.data[3].dataPoints.push({label:npc_eng_mac.dates[n], y:npc_eng_mac.d[n]})
      gfx0.options.data[4].dataPoints.push({label:npc_eng_mac.dates[n], y:npc_eng_mac.e[n]})
      gfx0.options.data[5].dataPoints.push({label:npc_eng_mac.dates[n], y:npc_eng_mac.f[n]})
      }
    for(var n=0; n<npc_eng_asm.dates.length; n++){
      gfx1.options.data[0].dataPoints.push({label:npc_eng_asm.dates[n], y:npc_eng_asm.a[n]})
      gfx1.options.data[1].dataPoints.push({label:npc_eng_asm.dates[n], y:npc_eng_asm.b[n]})
      gfx1.options.data[2].dataPoints.push({label:npc_eng_asm.dates[n], y:npc_eng_asm.c[n]})
      gfx1.options.data[3].dataPoints.push({label:npc_eng_asm.dates[n], y:npc_eng_asm.d[n]})
      gfx1.options.data[4].dataPoints.push({label:npc_eng_asm.dates[n], y:npc_eng_asm.e[n]})
      gfx1.options.data[5].dataPoints.push({label:npc_eng_asm.dates[n], y:npc_eng_asm.f[n]})
      }
    for(var n=0; n<npc_eng_mac_eng.dates.length; n++){
      gfx2.options.data[0].dataPoints.push({label:npc_eng_mac_eng.dates[n], y:npc_eng_mac_eng.a[n]})
      gfx2.options.data[1].dataPoints.push({label:npc_eng_mac_eng.dates[n], y:npc_eng_mac_eng.b[n]})
      gfx2.options.data[2].dataPoints.push({label:npc_eng_mac_eng.dates[n], y:npc_eng_mac_eng.c[n]})
      gfx2.options.data[3].dataPoints.push({label:npc_eng_mac_eng.dates[n], y:npc_eng_mac_eng.d[n]})
      gfx2.options.data[4].dataPoints.push({label:npc_eng_mac_eng.dates[n], y:npc_eng_mac_eng.e[n]})
      gfx2.options.data[5].dataPoints.push({label:npc_eng_mac_eng.dates[n], y:npc_eng_mac_eng.f[n]})
      }
    for(var n=0; n<npc_eng_asm_eng.dates.length; n++){
      gfx3.options.data[0].dataPoints.push({label:npc_eng_asm_eng.dates[n], y:npc_eng_asm_eng.a[n]})
      gfx3.options.data[1].dataPoints.push({label:npc_eng_asm_eng.dates[n], y:npc_eng_asm_eng.b[n]})
      gfx3.options.data[2].dataPoints.push({label:npc_eng_asm_eng.dates[n], y:npc_eng_asm_eng.c[n]})
      gfx3.options.data[3].dataPoints.push({label:npc_eng_asm_eng.dates[n], y:npc_eng_asm_eng.d[n]})
      gfx3.options.data[4].dataPoints.push({label:npc_eng_asm_eng.dates[n], y:npc_eng_asm_eng.e[n]})
      gfx3.options.data[5].dataPoints.push({label:npc_eng_asm_eng.dates[n], y:npc_eng_asm_eng.f[n]})
      }
    for(var n=0; n<npc_proc.dates.length; n++){
      gfx4.options.data[0].dataPoints.push({label:npc_proc.dates[n], y:npc_proc.a[n]})
      gfx4.options.data[1].dataPoints.push({label:npc_proc.dates[n], y:npc_proc.b[n]})
      gfx4.options.data[2].dataPoints.push({label:npc_proc.dates[n], y:npc_proc.c[n]})
      gfx4.options.data[3].dataPoints.push({label:npc_proc.dates[n], y:npc_proc.d[n]})
      gfx4.options.data[4].dataPoints.push({label:npc_proc.dates[n], y:npc_proc.e[n]})
      gfx4.options.data[5].dataPoints.push({label:npc_proc.dates[n], y:npc_proc.f[n]})
      }
    for(var n=0; n<npc_cost.dates.length; n++){
      gfx5.options.data[0].dataPoints.push({label:npc_cost.dates[n], y:npc_cost.a[n]})
      gfx5.options.data[1].dataPoints.push({label:npc_cost.dates[n], y:npc_cost.b[n]})
      gfx5.options.data[2].dataPoints.push({label:npc_cost.dates[n], y:npc_cost.c[n]})
      gfx5.options.data[3].dataPoints.push({label:npc_cost.dates[n], y:npc_cost.d[n]})
      gfx5.options.data[4].dataPoints.push({label:npc_cost.dates[n], y:npc_cost.e[n]})
      gfx5.options.data[5].dataPoints.push({label:npc_cost.dates[n], y:npc_cost.f[n]})
      }

    refreshall();
    sTxt(timstp,'Update : ' + tm);
    }
  setTimeout(loadData, 60000);
  }

window.onload=function(){
  var bg = new background();
  t1=new xLab();sFtC(t1,'#ccc');sPar(t1,0);
  t2=new xLab();sFtC(t2,'#ccc');sPar(t2,0);sFtA(t2,'right');
  sTxt(t1,"CONDE MATERIALS KPI - NEW PARTS CREATION");
  sTxt(t2,"NPC STATUS");
  timstp=new xLab();sPar(timstp,main);sFtC(timstp,'#666');
  var g = [];
  for(var n=0; n<6; n++){g[n] = new gfxbox();}
  var axeY_1 = {title: "Materials", titleFontColor: "#eee", labelFontColor: "#eee", labelFontFamily: 'Arial', minimum:0}
  var axeX_1 = {labelFontColor: "#eee", interval: 1, labelAngle: -32, labelFontFamily: 'Arial'}
  var axeX_2 = {labelFontColor: "#eee", interval: 1, labelAngle: -66, labelFontFamily: 'Arial', labelFontSize: 10}
  var leg_1 = {horizontalAlign: "center", verticalAlign: "bottom", labelFontFamily: 'Arial', fontColor: "#eee"}
  var ttip1 = {shared: true, backgroundColor: '#cdc', borderColor:'grey', content: toolTipContentX};
  gfx0 = new CanvasJS.Chart(g[0], {
  animationEnabled: true,
  animationDuration: 500,
  title: {text: "MANUFACT ENG.", fontSize:16, fontColor:"#ddd",fontFamily: 'Arial'},
  subtitles: [{text: "Machining", fontSize:14, fontColor:"#ddd",fontFamily: 'Arial'}],
  backgroundColor: null,
  dataPointMaxWidth: 16,
  legend:leg_1,
  axisY:axeY_1,
  axisX:axeX_1,
  toolTip:ttip1,
  data: [              
    { type: "stackedColumn", name: "Ontime", color: "#8B8", dataPoints: [], showInLegend: true },
    { type: "stackedColumn", name: "< 1w", color: "#895", dataPoints: [], showInLegend: true },
    { type: "stackedColumn", name: "< 2w", color: "#B95", dataPoints: [], showInLegend: true },
    { type: "stackedColumn", name: "< 4w", color: "#A74",  dataPoints: [], showInLegend: true },
    { type: "stackedColumn", name: "< 8w", color: "#B52", dataPoints: [], showInLegend: true },
    { type: "stackedColumn", name: "> 8w", color: "#A31",  dataPoints: [], showInLegend: true },
    ]
  });
  gfx1 = new CanvasJS.Chart(g[1], {
  animationEnabled: true,
  animationDuration: 500,
  title: {text: "MANUFACT ENG.", fontSize:16, fontColor:"#ddd",fontFamily: 'Arial'},
  subtitles: [{text: "Assembly", fontSize:14, fontColor:"#ddd",fontFamily: 'Arial'}],
  backgroundColor: null,
  dataPointMaxWidth: 16,
  legend:leg_1,
  axisY:axeY_1,
  axisX:axeX_1,
  toolTip:ttip1,
  data: [              
    { type: "stackedColumn", name: "Ontime", color: "#8B8", dataPoints: [], showInLegend: true },
    { type: "stackedColumn", name: "< 1w", color: "#895", dataPoints: [], showInLegend: true },
    { type: "stackedColumn", name: "< 2w", color: "#B95", dataPoints: [], showInLegend: true },
    { type: "stackedColumn", name: "< 4w", color: "#A74",  dataPoints: [], showInLegend: true },
    { type: "stackedColumn", name: "< 8w", color: "#B52", dataPoints: [], showInLegend: true },
    { type: "stackedColumn", name: "> 8w", color: "#A31",  dataPoints: [], showInLegend: true },
    ]
  });

  gfx2 = new CanvasJS.Chart(g[2], {
  animationEnabled: true,
  animationDuration: 500,
  title: {text: "MANUFACT ENG.", fontSize:16, fontColor:"#ddd",fontFamily: 'Arial'},
  subtitles: [{text: "Machining - NPC-ENG", fontSize:14, fontColor:"#ddd",fontFamily: 'Arial'}],
  backgroundColor: null,
  dataPointMaxWidth: 16,
  legend:leg_1,
  axisY:axeY_1,
  axisX:axeX_1,
  toolTip:ttip1,
  data: [              
    { type: "stackedColumn", name: "Ontime", color: "#8B8", dataPoints: [], showInLegend: true },
    { type: "stackedColumn", name: "< 1w", color: "#895", dataPoints: [], showInLegend: true },
    { type: "stackedColumn", name: "< 2w", color: "#B95", dataPoints: [], showInLegend: true },
    { type: "stackedColumn", name: "< 4w", color: "#A74",  dataPoints: [], showInLegend: true },
    { type: "stackedColumn", name: "< 8w", color: "#B52", dataPoints: [], showInLegend: true },
    { type: "stackedColumn", name: "> 8w", color: "#A31",  dataPoints: [], showInLegend: true },
    ]
  });
  gfx3 = new CanvasJS.Chart(g[3], {
  animationEnabled: true,
  animationDuration: 500,
  title: {text: "MANUFACT ENG.", fontSize:16, fontColor:"#ddd",fontFamily: 'Arial'},
  subtitles: [{text: "Assembly - NPC-ENG", fontSize:14, fontColor:"#ddd",fontFamily: 'Arial'}],
  backgroundColor: null,
  dataPointMaxWidth: 16,
  legend:leg_1,
  axisY:axeY_1,
  axisX:axeX_1,
  toolTip:ttip1,
  data: [              
    { type: "stackedColumn", name: "Ontime", color: "#8B8", dataPoints: [], showInLegend: true },
    { type: "stackedColumn", name: "< 1w", color: "#895", dataPoints: [], showInLegend: true },
    { type: "stackedColumn", name: "< 2w", color: "#B95", dataPoints: [], showInLegend: true },
    { type: "stackedColumn", name: "< 4w", color: "#A74",  dataPoints: [], showInLegend: true },
    { type: "stackedColumn", name: "< 8w", color: "#B52", dataPoints: [], showInLegend: true },
    { type: "stackedColumn", name: "> 8w", color: "#A31",  dataPoints: [], showInLegend: true },
    ]
  });


  gfx4 = new CanvasJS.Chart(g[4], {
  animationEnabled: true,
  animationDuration: 500,
  title: {text: "PROCUREMENT", fontSize:16, fontColor:"#ddd",fontFamily: 'Arial'},
  backgroundColor: null,
  dataPointMaxWidth: 16,
  legend:leg_1,
  axisY:axeY_1,
  axisX:axeX_1,
  toolTip:ttip1,
  data: [              
    { type: "stackedColumn", name: "Ontime", color: "#8B8", dataPoints: [], showInLegend: true },
    { type: "stackedColumn", name: "< 1w", color: "#895", dataPoints: [], showInLegend: true },
    { type: "stackedColumn", name: "< 2w", color: "#B95", dataPoints: [], showInLegend: true },
    { type: "stackedColumn", name: "< 4w", color: "#A74",  dataPoints: [], showInLegend: true },
    { type: "stackedColumn", name: "< 8w", color: "#B52", dataPoints: [], showInLegend: true },
    { type: "stackedColumn", name: "> 8w", color: "#A31",  dataPoints: [], showInLegend: true },
    ]
  });
  gfx5 = new CanvasJS.Chart(g[5], {
  animationEnabled: true,
  animationDuration: 500,
  title: {text: "COSTING", fontSize:16, fontColor:"#ddd",fontFamily: 'Arial'},
  backgroundColor: null,
  dataPointMaxWidth: 16,
  legend:leg_1,
  axisY:axeY_1,
  axisX:axeX_1,
  toolTip:ttip1,
  data: [              
    { type: "stackedColumn", name: "Ontime", color: "#8B8", dataPoints: [], showInLegend: true },
    { type: "stackedColumn", name: "< 1w", color: "#895", dataPoints: [], showInLegend: true },
    { type: "stackedColumn", name: "< 2w", color: "#B95", dataPoints: [], showInLegend: true },
    { type: "stackedColumn", name: "< 4w", color: "#A74",  dataPoints: [], showInLegend: true },
    { type: "stackedColumn", name: "< 8w", color: "#B52", dataPoints: [], showInLegend: true },
    { type: "stackedColumn", name: "> 8w", color: "#A31",  dataPoints: [], showInLegend: true },
    ]
  });

  window.onresize=function(){
    movep(bg,[0,0,1,1]);
    movep(t1,[.01, .01, .98, .045]);
    movep(t2,[.01, .01, .98, .045]);
    movep(timstp,[.01, .97, 1, .03]);
    for(var n=0; n<6; n++){
      x = Math.floor(n/2);
      y = n % 2;
      movep(g[n],[.01+x*.33, .07+y*.45, .32, .43]);
      refreshall();
      }
    };window.onresize();

  loadData();
  }

function fmtCur2(num) {
 var a=parseFloat(num).toFixed(0);
 return a.toString().replace(/(\d)(?=(\d{3})+(?!\d))/g, '$1 ');
 }

function toolTipContentX(e) {
  var str = "";
  var total = 0;
  var str2, str3;
  for (var i = 0; i < e.entries.length; i++){
    var  str1 = "<span style= \"color:"+e.entries[i].dataSeries.color + "\"> "+e.entries[i].dataSeries.name+"</span>: <strong>"+fmtCur2(e.entries[i].dataPoint.y)+"</strong><br/>";
    if(e.entries[i].dataSeries.name!='Target' && e.entries[i].dataSeries.name!='Capacity'){ total += e.entries[i].dataPoint.y;}
    str = str.concat(str1);
    }
  str2 = "<span style = \"color:#050;\"><strong>"+(e.entries[0].dataPoint.label)+"</strong></span><br/>";
  total = Math.round(total * 100) / 100;
  str3 = "<span style = \"color:#050\">Total:</span><strong> "+fmtCur2(total)+"</strong><br/>";
  return (str2.concat(str)).concat(str3);
  } 

</script>
</head>
<body >
</body>
</html>