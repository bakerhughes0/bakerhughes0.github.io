<html>
<head>
<script type=text/javascript src=js/func.js?v=001></script>
<script type=text/javascript src=js/canvasjs.min.js?v=007></script>
<script type=text/javascript src=module.js?v=003></script>
<script type=text/javascript>

function refreshall(){
  gfx0.render();gfx1.render();gfx2.render();gfx3.render();
  gfx4.render();gfx5.render();gfx6.render();gfx7.render();gfx8.render();
  }

function loadData(){
  var d = new Date();
  var sd = d.getUTCFullYear() + '-' + (d.getUTCMonth() + 1) + '-' + d.getUTCDate() + ' ' +  d.getUTCHours() + ':' + d.getUTCMinutes();
  var js = document.createElement('script');
  js.type='text/javascript';
  js.src="kpi2.js" + "?d=" + sd;
  document.head.appendChild(js);    
  js.onload = function(){
    sTxt(timstp,'Update : ' + tm);
    for(var n=0;n<4;n++){
         gfx5.options.data[n].dataPoints=[];
         gfx7.options.data[n].dataPoints=[];
         }
    for(var n=0;n<5;n++){
         gfx0.options.data[n].dataPoints=[];
         gfx1.options.data[n].dataPoints=[];
         gfx2.options.data[n].dataPoints=[];
         gfx4.options.data[n].dataPoints=[];
         gfx8.options.data[n].dataPoints=[];
         }
    gfx6.options.data[0].dataPoints=[];
    gfx6.options.data[1].dataPoints=[];
    gfx3.options.data[0].dataPoints=[];
    gfx3.options.data[1].dataPoints=[];
    gfx3.options.data[2].dataPoints=[];
    for(var n=0;n<engr_out.dates.length;n++){
      gfx0.options.data[0].dataPoints.push({label:engr_out.dates[n], y:engr_out.c[n]})
      gfx0.options.data[1].dataPoints.push({label:engr_out.dates[n], y:engr_out.v[n]})
      gfx0.options.data[2].dataPoints.push({label:engr_out.dates[n], y:engr_out.g[n]})
      gfx0.options.data[3].dataPoints.push({label:engr_out.dates[n], y:engr_out.l[n]})
      gfx0.options.data[4].dataPoints.push({label:engr_out.dates[n], y:engr_out.o[n]})
      }
    for(var n=0;n<smad_past.dates.length;n++){
      gfx1.options.data[0].dataPoints.push({label:smad_past.dates[n], y:smad_past.c[n]})
      gfx1.options.data[1].dataPoints.push({label:smad_past.dates[n], y:smad_past.v[n]})
      gfx1.options.data[2].dataPoints.push({label:smad_past.dates[n], y:smad_past.g[n]})
      gfx1.options.data[3].dataPoints.push({label:smad_past.dates[n], y:smad_past.l[n]})
      gfx1.options.data[4].dataPoints.push({label:smad_past.dates[n], y:smad_past.o[n]})
      }
    for(var n=0;n<pmad_past.dates.length;n++){
      gfx2.options.data[0].dataPoints.push({label:pmad_past.dates[n], y:pmad_past.c[n]})
      gfx2.options.data[1].dataPoints.push({label:pmad_past.dates[n], y:pmad_past.v[n]})
      gfx2.options.data[2].dataPoints.push({label:pmad_past.dates[n], y:pmad_past.g[n]})
      gfx2.options.data[3].dataPoints.push({label:pmad_past.dates[n], y:pmad_past.l[n]})
      gfx2.options.data[4].dataPoints.push({label:pmad_past.dates[n], y:pmad_past.o[n]})
      }
    var max = 0;
    for(var n=0;n<smad_align.w.length;n++){
      gfx8.options.data[0].dataPoints.push({label:smad_align.w[n], y:smad_align.c[n]})
      gfx8.options.data[1].dataPoints.push({label:smad_align.w[n], y:smad_align.v[n]})
      gfx8.options.data[2].dataPoints.push({label:smad_align.w[n], y:smad_align.g[n]})
      gfx8.options.data[3].dataPoints.push({label:smad_align.w[n], y:smad_align.l[n]})
      gfx8.options.data[4].dataPoints.push({label:smad_align.w[n], y:smad_align.o[n]})
      if(smad_align.c[n]+smad_align.v[n]+smad_align.g[n]+smad_align.l[n]+smad_align.o[n]>max) max=smad_align.c[n]+smad_align.v[n]+smad_align.g[n]+smad_align.l[n]+smad_align.o[n];
      }
    gfx8.options.axisY.maximum=max;
    for(var n=0;n<wo_rel.dates.length;n++){
      gfx4.options.data[0].dataPoints.push({label:wo_rel.dates[n], y:wo_rel.c[n]})
      gfx4.options.data[1].dataPoints.push({label:wo_rel.dates[n], y:wo_rel.v[n]})
      gfx4.options.data[2].dataPoints.push({label:wo_rel.dates[n], y:wo_rel.g[n]})
      gfx4.options.data[3].dataPoints.push({label:wo_rel.dates[n], y:wo_rel.l[n]})
      gfx4.options.data[4].dataPoints.push({label:wo_rel.dates[n], y:wo_rel.o[n]})
      }
    for(var n=0;n<pln_cnv.dates.length;n++){
      gfx5.options.data[0].dataPoints.push({label:pln_cnv.dates[n], y:pln_cnv.sp[n]})
      gfx5.options.data[1].dataPoints.push({label:pln_cnv.dates[n], y:pln_cnv.rb[n]})
      gfx5.options.data[2].dataPoints.push({label:pln_cnv.dates[n], y:pln_cnv.p1[n]})
      gfx5.options.data[3].dataPoints.push({label:pln_cnv.dates[n], y:pln_cnv.xx[n]})
      }
    for(var n=0;n<wo_cancel.dates.length;n++){
      gfx6.options.data[0].dataPoints.push({label:wo_cancel.dates[n], y:wo_cancel.mto[n]})
      gfx6.options.data[1].dataPoints.push({label:wo_cancel.dates[n], y:wo_cancel.mts[n]})
      }
    for(var n=0;n<sim.dates.length;n++){
      gfx3.options.data[0].dataPoints.push({label:sim.dates[n], y:sim.a[n]})
      gfx3.options.data[1].dataPoints.push({label:sim.dates[n], y:sim.b[n]})
      gfx3.options.data[2].dataPoints.push({label:sim.dates[n], y:sim.c[n]})
      }
    for(var n=0;n<wip_value.dates.length;n++){
      gfx7.options.data[0].dataPoints.push({label:wip_value.dates[n], y:wip_value.a[n]})
      gfx7.options.data[1].dataPoints.push({label:wip_value.dates[n], y:wip_value.b[n]})
      gfx7.options.data[2].dataPoints.push({label:wip_value.dates[n], y:wip_value.c[n]})
      gfx7.options.data[3].dataPoints.push({label:wip_value.dates[n], y:wip_value.d[n]})
      }
    refreshall();
    }
  setTimeout(loadData, 60000);
  }

window.onload=function(){
  var bg = new background();
  t1=new xLab();sFtC(t1,'#ccc');sPar(t1,0);
  t2=new xLab();sFtC(t2,'#ccc');sPar(t2,0);sFtA(t2,'right');
  sTxt(t1,"CONDE MATERIALS KPI - PLANNING");
  sTxt(t2,"");
  timstp=new xLab();sPar(timstp,main);sFtC(timstp,'#666');
  var g = [];
  for(var n=0; n<9; n++){g[n] = new gfxbox();}

  gfx0 = new CanvasJS.Chart(g[0], {
  animationEnabled: true,
  animationDuration: 1500,
  title: {text: "ENGINEERING OUTPUT", fontColor:"#ddd",fontFamily: 'Arial',fontSize:16},
  backgroundColor: null,
  dataPointMaxWidth: 16,
  legend: {
    horizontalAlign: "center",
    verticalAlign: "bottom",
    labelFontFamily: 'Arial',
    fontColor: "#eee"
    },
  axisY:{
    title: "Line Items",
    titleFontColor: "#eee",
    labelFontColor: "#eee",
    labelFontFamily: 'Arial',
    },
  axisX:{
    labelFontColor: "#eee",
    interval: 1,
    labelAngle: -36,
    labelFontFamily: 'Arial',
    },
  toolTip: {shared: true, content: toolTipContent6},
  data: [              
    { type: "stackedColumn", name: "Camflex", showInLegend: true,color:"#f69",  dataPoints: [] },
    { type: "stackedColumn", name: "Varipak", showInLegend: true,color:"#888",  dataPoints: [] },
    { type: "stackedColumn", name: "Globes", showInLegend: true,color:"#900",  dataPoints: [] },
    { type: "stackedColumn", name: "Levels", showInLegend: true,color:"#00C",  dataPoints: [] },
    { type: "stackedColumn", name: "Others", showInLegend: true,color:"#696",  dataPoints: [] },
    ]
  });

  gfx1 = new CanvasJS.Chart(g[1], {
  animationEnabled: true,
  animationDuration: 1500,
  title: {text: "SMAD IN THE PAST", fontColor:"#ddd",fontFamily: 'Arial',fontSize:16},
  backgroundColor: null,
  dataPointMaxWidth: 16,
  legend: {
    horizontalAlign: "center",
    verticalAlign: "bottom",
    labelFontFamily: 'Arial',
    fontColor: "#eee"
    },
  axisY:{
    title: "Line Items",
    titleFontColor: "#eee",
    labelFontColor: "#eee",
    labelFontFamily: 'Arial',
    },
  axisX:{
    labelFontColor: "#eee",
    interval: 1,
    labelAngle: -36,
    labelFontFamily: 'Arial',
    },
  toolTip: {shared: true, content: toolTipContent6},
  data: [              
    { type: "stackedColumn", name: "Camflex", showInLegend: true,color:"#f69",  dataPoints: [] },
    { type: "stackedColumn", name: "Varipak", showInLegend: true,color:"#888",  dataPoints: [] },
    { type: "stackedColumn", name: "Globes", showInLegend: true,color:"#900",  dataPoints: [] },
    { type: "stackedColumn", name: "Levels", showInLegend: true,color:"#00C",  dataPoints: [] },
    { type: "stackedColumn", name: "Others", showInLegend: true,color:"#696",  dataPoints: [] },
    ]
  });

  gfx2 = new CanvasJS.Chart(g[2], {
  animationEnabled: true,
  animationDuration: 1500,
  title: {text: "PMAD IN THE PAST", fontColor:"#ddd",fontFamily: 'Arial',fontSize:16},
  backgroundColor: null,
  dataPointMaxWidth: 16,
  legend: {
    horizontalAlign: "center",
    verticalAlign: "bottom",
    labelFontFamily: 'Arial',
    fontColor: "#eee"
    },
  axisY:{
    title: "Line Items",
    titleFontColor: "#eee",
    labelFontColor: "#eee",
    labelFontFamily: 'Arial',
    },
  axisX:{
    labelFontColor: "#eee",
    interval: 1,
    labelAngle: -36,
    labelFontFamily: 'Arial',
    },
  toolTip: {shared: true, content: toolTipContent6},
  data: [              
    { type: "stackedColumn", name: "Camflex", showInLegend: true,color:"#f69", dataPoints: [] },
    { type: "stackedColumn", name: "Varipak", showInLegend: true,color:"#888", dataPoints: [] },
    { type: "stackedColumn", name: "Globes", showInLegend: true,color:"#900", dataPoints: [] },
    { type: "stackedColumn", name: "Levels", showInLegend: true,color:"#00C", dataPoints: [] },
    { type: "stackedColumn", name: "Others", showInLegend: true,color:"#696", dataPoints: [] },
    ]
  }); 
  gfx3 = new CanvasJS.Chart(g[3], {
  animationEnabled: true,
  animationDuration: 1500,
  title: {text: "ORDER LINES SIM", fontColor:"#ddd",fontFamily: 'Arial',fontSize:16},
  subtitles: [{text: "vs. PMAD", fontColor:"#ddd",fontFamily: 'Arial',fontSize:10}],
  backgroundColor: null,
  dataPointMaxWidth: 16,
  legend: {
    horizontalAlign: "center",
    verticalAlign: "bottom",
    labelFontFamily: 'Arial',
    fontColor: "#eee"
    },
  axisY:{
    title: "Line Items",
    titleFontColor: "#eee",
    labelFontColor: "#eee",
    labelFontFamily: 'Arial',
    minimum:0,
    },
  axisX:{
    labelFontColor: "#eee",
    interval: 1,
    labelAngle: -36,
    labelFontFamily: 'Arial',
    },
  toolTip: {shared: true},
  data: [              
    { type: "stackedColumn", name: "<=0w", showInLegend: true,color:"#298A08",  dataPoints: [] },
    { type: "stackedColumn", name: "1 to 4w", showInLegend: true,color:"#FE9A2E",  dataPoints: [] },
    { type: "stackedColumn", name: ">4w", showInLegend: true,color:"#FF0000",  dataPoints: [] },
    ]
  });
  gfx4 = new CanvasJS.Chart(g[4], {
  animationEnabled: true,
  animationDuration: 1500,
  title: {text: "WO RELEASED", fontColor:"#ddd",fontFamily: 'Arial',fontSize:16},
  backgroundColor: null,
  dataPointMaxWidth: 16,
  legend: {
    horizontalAlign: "center",
    verticalAlign: "bottom",
    labelFontFamily: 'Arial',
    fontColor: "#eee"
    },
  axisY:{
    title: "Products Quantity",
    titleFontColor: "#eee",
    labelFontColor: "#eee",
    labelFontFamily: 'Arial',
    },
  axisX:{
    labelFontColor: "#eee",
    interval: 1,
    labelAngle: -36,
    labelFontFamily: 'Arial',
    },
  toolTip: {shared: true},
  data: [              
    { type: "stackedColumn", name: "Camflex", showInLegend: true,color:"#f69", dataPoints: [] },
    { type: "stackedColumn", name: "Varipak", showInLegend: true,color:"#888", dataPoints: [] },
    { type: "stackedColumn", name: "Globes", showInLegend: true,color:"#900", dataPoints: [] },
    { type: "stackedColumn", name: "Levels", showInLegend: true,color:"#00C", dataPoints: [] },
    { type: "stackedColumn", name: "Others", showInLegend: true,color:"#696", dataPoints: [] },
    ]
  });  
  gfx5 = new CanvasJS.Chart(g[5], {
  animationEnabled: true,
  animationDuration: 1500,
  title: {text: "PLANNED ORDERS NOT CONVERTED", fontColor:"#ddd",fontFamily: 'Arial',fontSize:16},
  subtitles: [{text: "within 7 days", fontColor:"#ddd",fontFamily: 'Arial',fontSize:10}],
  backgroundColor: null,
  dataPointMaxWidth: 16,
  legend: {
    horizontalAlign: "center",
    verticalAlign: "bottom",
    labelFontFamily: 'Arial',
    fontColor: "#ddd"
    },
  axisY:{
    title: "Planned Orders",
    titleFontColor: "#eee",
    labelFontColor: "#eee",
    labelFontFamily: 'Arial',
    },
  axisX:{
    labelFontColor: "#eee",
    interval: 1,
    labelAngle: -36,
    labelFontFamily: 'Arial',
    },
  toolTip: {shared: true, content: toolTipContent6},
  data: [              
    { type: "stackedColumn", name: "P1.P1.SP", showInLegend: true,color:"#930",  dataPoints: [] },
    { type: "stackedColumn", name: "P1.P1.RB", showInLegend: true,color:"#cc0",  dataPoints: [] },
    { type: "stackedColumn", name: "P1.P1.P1", showInLegend: true,color:"#093",  dataPoints: [] },
    { type: "stackedColumn", name: "Others", showInLegend: true,color:"#903",  dataPoints: [] },
    ]
  });
  gfx6 = new CanvasJS.Chart(g[6], {
  animationEnabled: true,
  animationDuration: 1500,
  title: {text: "WORKORDERS TO CANCEL", fontColor:"#ddd",fontFamily: 'Arial',fontSize:16},
  backgroundColor: null,
  dataPointMaxWidth: 16,
  legend: {
    horizontalAlign: "center",
    verticalAlign: "bottom",
    labelFontFamily: 'Arial',
    fontColor: "#ddd"
    },
  axisY:{
    title: "Workorders",
    titleFontColor: "#eee",
    labelFontColor: "#eee",
    labelFontFamily: 'Arial',
    },
  axisX:{
    labelFontColor: "#eee",
    interval: 1,
    labelAngle: -36,
    labelFontFamily: 'Arial',
    },
  toolTip: {shared: true, content: toolTipContent6},
  data: [              
    { type: "stackedColumn", name: "MTO", showInLegend: true, color:"#8b9",  dataPoints: [] },
    { type: "stackedColumn", name: "MTS", showInLegend: true, color:"#586",  dataPoints: [] },
    ]
  });
  gfx7 = new CanvasJS.Chart(g[7], {
  animationEnabled: true,
  animationDuration: 1500,
  title: {text: "WIP VALUE", fontColor:"#ddd",fontFamily: 'Arial',fontSize:16},
  backgroundColor: null,
  dataPointMaxWidth: 16,
  legend: {
    horizontalAlign: "center",
    verticalAlign: "bottom",
    labelFontFamily: 'Arial',
    fontColor: "#ddd"
    },
  axisY:{
    title: "USD",
    titleFontColor: "#eee",
    labelFontColor: "#eee",
    labelFontFamily: 'Arial',
    },
  axisX:{
    labelFontColor: "#eee",
    interval: 1,
    labelAngle: -36,
    labelFontFamily: 'Arial',
    },
  toolTip: {shared: true, content: toolTipContent32},
  data: [              
    { type: "stackedColumn", name: "Completion 0%-25%", showInLegend: true, color:"#8b9",  dataPoints: [] },
    { type: "stackedColumn", name: "25%-50%", showInLegend: true, color:"#7A8",  dataPoints: [] },
    { type: "stackedColumn", name: "50%-75%", showInLegend: true, color:"#697",  dataPoints: [] },
    { type: "stackedColumn", name: "75%-100%", showInLegend: true, color:"#586",  dataPoints: [] },
    ]
  });

  gfx8 = new CanvasJS.Chart(g[8], {
  animationEnabled: true,
  animationDuration: 1500,
  title: {text: "SMAD ALIGNMENT", fontColor:"#ddd",fontFamily: 'Arial',fontSize:16},
  subtitles: [{text: "vs. PMAD", fontColor:"#ddd",fontFamily: 'Arial',fontSize:10}],
  backgroundColor: null,
  dataPointMaxWidth: 16,
  legend: {
    horizontalAlign: "center",
    verticalAlign: "bottom",
    labelFontFamily: 'Arial',
    fontColor: "#eee"
    },
  axisY:{
    title: "Line Items",
    titleFontColor: "#eee",
    labelFontColor: "#eee",
    labelFontFamily: 'Arial',
    },
  axisX:{
    title:'weeks', titleFontColor: "#eee",

    labelFontColor: "#eee",
    interval: 1,
    labelAngle: -36,
    labelFontFamily: 'Arial',
    },
  toolTip: {shared: true, content: toolTipContent6},
  data: [              
    { type: "stackedColumn", name: "Camflex", showInLegend: true,color:"#f69",  dataPoints: [] },
    { type: "stackedColumn", name: "Varipak", showInLegend: true,color:"#888",  dataPoints: [] },
    { type: "stackedColumn", name: "Globes", showInLegend: true,color:"#900",  dataPoints: [] },
    { type: "stackedColumn", name: "Levels", showInLegend: true,color:"#00C",  dataPoints: [] },
    { type: "stackedColumn", name: "Others", showInLegend: true,color:"#696",  dataPoints: [] },
    ]
  });
  window.onresize=function(){
    movep(bg,[0,0,1,1]);
    movep(t1,[.01, .01, .98, .045]);
    movep(t2,[.01, .01, .98, .045]);
    movep(timstp,[.01, .97, 1, .03]);
    pos = [0, 1, 2, 7, 4, 5, 6, 8, 3];
    for(var n=0; n<9; n++){
      x = pos[n] % 4;
      y = Math.floor(pos[n]/4);
      movep(g[n],[.01+x*.2475, .07+y*.3, .2375, .29]);
      }

    refreshall();
    };window.onresize();
  loadData();
  }

function fmtCur2(num) {
 var a=parseFloat(num).toFixed(0);
 return a.toString().replace(/(\d)(?=(\d{3})+(?!\d))/g, '$1 ');
 }

function toolTipContentMS(e) {
  var str = "";
  var total = 0;
  var str2, str3;
  for (var i = 0; i < e.entries.length; i++){
    var  str1 = "<span style= \"color:"+e.entries[i].dataSeries.color + "\"> "+e.entries[i].dataSeries.name+"</span>: <strong>"+fmtCur2(e.entries[i].dataPoint.y)+"</strong><br/>";
    if(e.entries[i].dataSeries.name!='Shipping' && e.entries[i].dataSeries.name!='Capacity'){ total += e.entries[i].dataPoint.y;}
    str = str.concat(str1);
    }
  str2 = "<span style = \"color:#050;\"><strong>"+(e.entries[0].dataPoint.label)+"</strong></span><br/>";
  total = Math.round(total * 100) / 100;
  str3 = "<span style = \"color:#050\">Total:</span><strong> "+fmtCur2(total)+"</strong><br/>";
  return (str2.concat(str)).concat(str3);
  } 

function toolTipContent32(e) {
  var str = "";
  var total = 0;
  var str2, str3;
  for (var i = 0; i < e.entries.length; i++){
    var  str1 = "<span style= \"color:"+e.entries[i].dataSeries.color + "\"> "+e.entries[i].dataSeries.name+"</span>: <strong>"+fmtCur2(e.entries[i].dataPoint.y)+"</strong><br/>";
    if(e.entries[i].dataSeries.name!='Projection' && e.entries[i].dataSeries.name!='Capacity' && e.entries[i].dataSeries.name!='Cible'){ total += e.entries[i].dataPoint.y;}
    str = str.concat(str1);
    }
  str2 = "<span style = \"color:DodgerBlue;\"><strong>"+(e.entries[0].dataPoint.label)+"</strong></span><br/>";
  total = Math.round(total * 100) / 100;
  str3 = "<span style = \"color:Tomato\">Total:</span><strong> "+fmtCur2(total)+"</strong><br/>";
  return (str2.concat(str)).concat(str3);
  }

</script>
</head>
<body >
</body>
</html>